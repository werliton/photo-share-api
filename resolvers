{
    Query: {
      totalPhotos: () => photos.length,
      allPhotos: () => photos,
      allUsers: () => users
    },
    Mutation: {
      postPhoto(root, params) {
        let newPhoto = {
          id: _id++,
          ...params.input
        };
        photos.push(newPhoto);
  
        return newPhoto;
      }
    },
    Photo: {
      url: root => `http://letox.com/img/${root.id}.jpg`,
      postedBy: root => users.find(u => u.githublogin === root.githublogin),
      taggedUsers: root =>
        tags
          .filter(tag => tag.photoId === root.id)
          // Convert the array of tags into an array of userIDs
          .map(tag => tag.userId)
          // Converts array of userIDs into an array of user objects
          .map(userId => users.find(u => u.githublogin === userId))
    },
    User: {
      postedPhotos: root =>
        photos.filter(p => p.githublogin === root.githublogin),
      inPhotos: root =>
        tags
          // Returns an array of tags that only contain the current user
          .filter(tag => tag.userId === root.id)
          // Convert the array of tags into array of photoIDs
          .map(tag => tag.photoId)
          // Convert array of photoIDs into array of photo objects
          .map(photoId => photos.find(p => p.id === photoId))
    }
  }